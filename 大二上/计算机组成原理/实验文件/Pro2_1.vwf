/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("add_sub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dataa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dataa[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("dataa[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataa";
}

SIGNAL("datab")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("datab[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("datab[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "datab";
}

SIGNAL("overflow")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

SIGNAL("result[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result";
}

TRANSITION_LIST("add_sub")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.077;
		LEVEL 1 FOR 24.987;
		LEVEL 0 FOR 949.936;
	}
}

TRANSITION_LIST("cout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.526;
		LEVEL 0 FOR 5.432;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 5.251;
		LEVEL 1 FOR 14.938;
		LEVEL 0 FOR 14.848;
		LEVEL 1 FOR 0.452;
		LEVEL 0 FOR 949.936;
	}
}

TRANSITION_LIST("dataa[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14.575;
		LEVEL 1 FOR 10.412;
		LEVEL 0 FOR 14.394;
		LEVEL 1 FOR 10.231;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("dataa[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.958;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 20.189;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 40.106;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("dataa[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14.575;
		LEVEL 1 FOR 5.342;
		LEVEL 0 FOR 19.464;
		LEVEL 1 FOR 5.342;
		LEVEL 0 FOR 34.764;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("dataa[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 9.958;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.342;
		LEVEL 0 FOR 5.07;
		LEVEL 1 FOR 9.777;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.342;
		LEVEL 0 FOR 955.277;
	}
}

TRANSITION_LIST("dataa[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.341;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 10.412;
		LEVEL 0 FOR 4.436;
		LEVEL 1 FOR 5.341;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 10.231;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("dataa[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19.917;
		LEVEL 1 FOR 5.07;
		LEVEL 0 FOR 19.736;
		LEVEL 1 FOR 4.889;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("dataa[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 14.575;
		LEVEL 0 FOR 10.412;
		LEVEL 1 FOR 14.394;
		LEVEL 0 FOR 40.106;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("dataa[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 5.341;
		LEVEL 1 FOR 9.959;
		LEVEL 0 FOR 5.07;
		LEVEL 1 FOR 4.436;
		LEVEL 0 FOR 5.341;
		LEVEL 1 FOR 9.959;
		LEVEL 0 FOR 34.764;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("datab[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.958;
		LEVEL 1 FOR 15.029;
		LEVEL 0 FOR 9.777;
		LEVEL 1 FOR 14.848;
		LEVEL 0 FOR 950.388;
	}
}

TRANSITION_LIST("datab[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.526;
		LEVEL 0 FOR 5.432;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 5.251;
		LEVEL 1 FOR 9.506;
		LEVEL 0 FOR 5.432;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 5.251;
		LEVEL 1 FOR 4.98;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("datab[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.958;
		LEVEL 1 FOR 15.029;
		LEVEL 0 FOR 9.777;
		LEVEL 1 FOR 14.848;
		LEVEL 0 FOR 950.388;
	}
}

TRANSITION_LIST("datab[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14.575;
		LEVEL 1 FOR 10.412;
		LEVEL 0 FOR 14.394;
		LEVEL 1 FOR 10.231;
		LEVEL 0 FOR 950.388;
	}
}

TRANSITION_LIST("datab[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.526;
		LEVEL 0 FOR 15.3;
		LEVEL 1 FOR 9.506;
		LEVEL 0 FOR 15.3;
		LEVEL 1 FOR 4.98;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("datab[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.526;
		LEVEL 1 FOR 5.432;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.251;
		LEVEL 0 FOR 9.506;
		LEVEL 1 FOR 5.432;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.251;
		LEVEL 0 FOR 955.368;
	}
}

TRANSITION_LIST("datab[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 0.09;
		LEVEL 0 FOR 9.868;
		LEVEL 1 FOR 9.868;
		LEVEL 0 FOR 14.938;
		LEVEL 1 FOR 9.868;
		LEVEL 0 FOR 34.855;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("datab[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.526;
		LEVEL 0 FOR 5.432;
		LEVEL 1 FOR 19.374;
		LEVEL 0 FOR 5.432;
		LEVEL 1 FOR 14.848;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("overflow")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.381;
		LEVEL 1 FOR 5.251;
		LEVEL 0 FOR 955.368;
	}
}

TRANSITION_LIST("result[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.526;
		LEVEL 0 FOR 15.3;
		LEVEL 1 FOR 5.251;
		LEVEL 0 FOR 19.555;
		LEVEL 1 FOR 4.98;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("result[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.526;
		LEVEL 0 FOR 5.432;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 5.251;
		LEVEL 1 FOR 0.091;
		LEVEL 0 FOR 5.07;
		LEVEL 1 FOR 4.345;
		LEVEL 0 FOR 10.049;
		LEVEL 1 FOR 5.251;
		LEVEL 0 FOR 955.368;
	}
}

TRANSITION_LIST("result[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9.958;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 20.189;
		LEVEL 1 FOR 9.959;
		LEVEL 0 FOR 34.764;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("result[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.341;
		LEVEL 0 FOR 9.959;
		LEVEL 1 FOR 5.07;
		LEVEL 0 FOR 0.09;
		LEVEL 1 FOR 9.687;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.342;
		LEVEL 0 FOR 955.277;
	}
}

TRANSITION_LIST("result[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.617;
		LEVEL 0 FOR 20.37;
		LEVEL 1 FOR 4.345;
		LEVEL 0 FOR 0.091;
		LEVEL 1 FOR 5.341;
		LEVEL 0 FOR 965.236;
	}
}

TRANSITION_LIST("result[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.526;
		LEVEL 1 FOR 5.432;
		LEVEL 0 FOR 15.119;
		LEVEL 1 FOR 14.304;
		LEVEL 0 FOR 5.342;
		LEVEL 1 FOR 4.889;
		LEVEL 0 FOR 29.875;
		LEVEL 1 FOR 920.513;
	}
}

TRANSITION_LIST("result[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.09;
		LEVEL 1 FOR 9.868;
		LEVEL 0 FOR 4.617;
		LEVEL 1 FOR 5.251;
		LEVEL 0 FOR 0.091;
		LEVEL 1 FOR 5.16;
		LEVEL 0 FOR 4.255;
		LEVEL 1 FOR 10.049;
		LEVEL 0 FOR 5.251;
		LEVEL 1 FOR 0.091;
		LEVEL 0 FOR 955.277;
	}
}

TRANSITION_LIST("result[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4.526;
		LEVEL 1 FOR 0.091;
		LEVEL 0 FOR 15.3;
		LEVEL 1 FOR 5.07;
		LEVEL 0 FOR 4.345;
		LEVEL 1 FOR 0.091;
		LEVEL 0 FOR 15.3;
		LEVEL 1 FOR 4.889;
		LEVEL 0 FOR 950.388;
	}
}

DISPLAY_LINE
{
	CHANNEL = "add_sub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dataa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dataa[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "datab";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "datab[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "datab[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "overflow";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "result[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "result[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 21;
}

TIME_BAR
{
	TIME = 24987;
	MASTER = TRUE;
}
;
